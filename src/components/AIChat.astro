---
// No necesita props. P√©galo y √∫salo en cualquier p√°gina/layout.
---
<style is:global>
  /* Scroll suave dentro del chat */
  .chat-scroll::-webkit-scrollbar { width: 6px; }
  .chat-scroll::-webkit-scrollbar-thumb { background: rgba(0,0,0,.15); border-radius: 999px; }
</style>

<div id="ai-chat-root" class="fixed bottom-6 right-6 z-50">
  <!-- Bot√≥n flotante -->
  <button
    id="ai-chat-toggle"
    class="group relative flex items-center gap-3 px-4 py-3 rounded-full shadow-lg
           bg-gradient-to-r from-blue-950 to-blue-800 text-yellow-400
           hover:from-blue-900 hover:to-blue-700 transition-all duration-300
           focus:outline-none focus:ring-4 focus:ring-blue-300/40"
    aria-controls="ai-chat-panel"
    aria-expanded="false"
  >
    <!-- icono burbuja -->
    <svg class="w-5 h-5" viewBox="0 0 24 24" fill="currentColor" aria-hidden="true">
      <path d="M2 12a8 8 0 0 1 8-8h4a8 8 0 1 1 0 16H9l-4 3v-3A8 8 0 0 1 2 12Z"/>
    </svg>
    <span class="font-semibold">Asistente</span>
  </button>

  <!-- Panel -->
  <div
    id="ai-chat-panel"
    class="hidden mt-3 w-[22rem] sm:w-96 rounded-2xl overflow-hidden
           bg-white shadow-2xl ring-1 ring-black/10"
    role="dialog"
    aria-label="Chat con asistente"
  >
    <!-- Header -->
    <div class="flex items-center justify-between px-4 py-3 bg-blue-950 text-yellow-400">
      <div class="flex items-center gap-2">
        <span class="inline-block w-2.5 h-2.5 rounded-full bg-emerald-400 animate-pulse"></span>
        <h3 class="font-bold">Asistente IA</h3>
      </div>
      <button id="ai-chat-close" class="p-1 rounded hover:bg-blue-900/60 focus:outline-none focus:ring-2 focus:ring-yellow-400/40" aria-label="Cerrar chat">
        <svg class="w-5 h-5" viewBox="0 0 24 24" fill="currentColor"><path d="M18.3 5.7a1 1 0 0 0-1.4-1.4L12 9.17 7.1 4.3a1 1 0 1 0-1.4 1.4L10.83 12l-5.14 4.9a1 1 0 0 0 1.4 1.45L12 14.83l4.9 4.94a1 1 0 0 0 1.45-1.4L13.17 12l5.13-4.9Z"/></svg>
      </button>
    </div>

    <!-- Mensajes -->
    <div id="ai-chat-messages" class="chat-scroll h-80 overflow-y-auto px-4 py-3 space-y-3 bg-white">
      <!-- Mensaje de bienvenida -->
      <div class="flex items-start gap-2">
        <div class="shrink-0 mt-1 w-6 h-6 rounded-full bg-blue-900/90 text-yellow-300 grid place-items-center text-xs">AI</div>
        <div class="max-w-[80%] rounded-2xl px-3 py-2 bg-gray-100 text-gray-800">
          ¬°Hola! Soy tu asistente. Cu√©ntame qu√© necesitas ü§ù
        </div>
      </div>
    </div>

    <!-- Input -->
    <form id="ai-chat-form" class="border-t border-gray-200 bg-white p-3 flex items-center gap-2">
      <input
        id="ai-chat-input"
        type="text"
        class="flex-1 rounded-xl border border-gray-300 px-3 py-2 text-sm focus:outline-none focus:ring-4 focus:ring-blue-300/30"
        placeholder="Escribe tu mensaje‚Ä¶"
        autocomplete="off"
        required
      />
      <button
        id="ai-chat-send"
        class="rounded-xl px-3 py-2 bg-yellow-500 text-blue-950 font-semibold hover:bg-yellow-400 transition-colors disabled:opacity-60"
        type="submit"
      >
        Enviar
      </button>
    </form>
  </div>
</div>
<script type="module">
  const $ = (sel) => document.querySelector(sel);
  const panel = document.getElementById("ai-chat-panel");
  const btnToggle = document.getElementById("ai-chat-toggle");
  const btnClose = document.getElementById("ai-chat-close");
  const form = document.getElementById("ai-chat-form");
  const input = document.getElementById("ai-chat-input");
  const messages = document.getElementById("ai-chat-messages");

  const open = () => {
    panel.classList.remove("hidden");
    btnToggle.setAttribute("aria-expanded", "true");
    setTimeout(() => { if (input) input.focus(); }, 50);
  };
  const close = () => {
    panel.classList.add("hidden");
    btnToggle.setAttribute("aria-expanded", "false");
  };

  btnToggle && btnToggle.addEventListener("click", () => {
    const expanded = btnToggle.getAttribute("aria-expanded") === "true";
    expanded ? close() : open();
  });
  btnClose && btnClose.addEventListener("click", close);

  function bubbleAI(text) {
    const wrap = document.createElement("div");
    wrap.className = "flex items-start gap-2";
    const avatar = document.createElement("div");
    avatar.className = "shrink-0 mt-1 w-6 h-6 rounded-full bg-blue-900/90 text-yellow-300 grid place-items-center text-xs";
    avatar.textContent = "AI";
    const box = document.createElement("div");
    box.className = "max-w-[80%] rounded-2xl px-3 py-2 bg-gray-100 text-gray-800";
    box.textContent = text;
    wrap.appendChild(avatar);
    wrap.appendChild(box);
    return wrap;
  }

  function bubbleUser(text) {
    const wrap = document.createElement("div");
    wrap.className = "flex items-start gap-2 justify-end";
    const box = document.createElement("div");
    box.className = "max-w-[80%] rounded-2xl px-3 py-2 bg-blue-50 text-blue-900 shadow-sm";
    box.textContent = text;
    wrap.appendChild(box);
    return wrap;
  }

  function addMsg(text, who) {
    if (!messages) return;
    const node = who === "user" ? bubbleUser(text) : bubbleAI(text);
    messages.appendChild(node);
    messages.scrollTop = messages.scrollHeight;
  }

  form && form.addEventListener("submit", async (e) => {
    e.preventDefault();
    const text = (input && input.value ? input.value : "").trim();
    if (!text) return;

    addMsg(text, "user");
    if (input) input.value = "";
    const btn = document.getElementById("ai-chat-send");
    if (btn) btn.setAttribute("disabled", "true");

    try {
      const res = await fetch("/api/ai-chat", {
        method: "POST",
        headers: { "Content-Type": "application/json" },
        body: JSON.stringify({ message: text })
      });
      if (!res.ok) throw new Error("HTTP " + res.status);
      const data = await res.json();
      addMsg(data.reply ? String(data.reply) : "Listo.", "ai");
    } catch (err) {
      console.error(err);
      addMsg("Ups, hubo un problema al responder. Intenta nuevamente en un momento.", "ai");
    } finally {
      if (btn) btn.removeAttribute("disabled");
    }
  });
</script>
